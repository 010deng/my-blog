{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{336:function(t,a,s){\"use strict\";s.r(a);var v=s(0),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"blockquote\",[s(\"p\",[t._v(\"楼主现在大三，也到了找工作的年纪，这不最近在准备面试的同时温习之前学习的知识。有部分知识点实在是让我忍不住记录下来，z-index就是其中之一\")])]),t._v(\" \"),s(\"p\",[t._v(\"其实关于接下来要记录的这部分知识点，我在大二的时候就看过相关的解释了，奈何没完全掌握，在后续的学习中就给自己挖了大坑，所以还是决心记录一下。\")]),t._v(\" \"),s(\"h1\",{attrs:{id:\"几个概念\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#几个概念\"}},[t._v(\"#\")]),t._v(\" 几个概念\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"层叠上下文\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#层叠上下文\"}},[t._v(\"#\")]),t._v(\" 层叠上下文\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"层叠上下文(stacking context)，是HTML中一个三维的概念。在CSS2.1规范中，每个盒模型的位置是三维的，分别是平面画布上的X轴，Y轴以及表示层叠的Z轴\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"层叠等级\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#层叠等级\"}},[t._v(\"#\")]),t._v(\" 层叠等级\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"层叠等级(stacking level),\"),s(\"strong\",[t._v(\"在同一个层叠上下文中\")]),t._v(\"，它描述定义的是该层叠上下文中的层叠上下文元素在Z轴上的上下顺序。在其他普通元素中，它描述定义的是这些普通元素在Z轴上的上下顺序。\")])]),t._v(\" \"),s(\"p\",[t._v(\"两概念往这一放，虽然一眼下去感觉十分晦涩，但是相信大家应该发现了一些值得关注的点。没错，层叠等级是基于层叠上下文来描述的，如果需要比较的元素处于不同的层叠上下文中，那么无论它在当前层叠上下文中的层叠等级有多么多么高都是无意义的。就像皇上最丑的妃子也比民间女神好看一样，他们所处的地位都不同，根本就无可比性\")]),t._v(\" \"),s(\"p\",[t._v(\"那么知道了上面两个概念之后，大家的关注点肯定在如何产生层叠上下文，以及如何改变层叠等级上。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"产生层叠上下文\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#产生层叠上下文\"}},[t._v(\"#\")]),t._v(\" 产生层叠上下文\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"根层叠上下文 -- \"),s(\"code\",[t._v(\"<html></html>\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"z-index 作用在定位元素上\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"层叠顺序\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#层叠顺序\"}},[t._v(\"#\")]),t._v(\" 层叠顺序\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/30/1658910c5cb364b6?imageslim\",alt:\"avatar\"}})]),t._v(\" \"),s(\"p\",[t._v(\"这就是咱们程序员不做任何修改下，浏览器默认的一套准则（至于为什么行内元素的层叠顺序在浮动元素之上，咱们就想着网页的初心是展示内容即可，因为行内元素多半是用来展示主体内容的）\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"万金油式判断方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#万金油式判断方法\"}},[t._v(\"#\")]),t._v(\" 万金油式判断方法\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"首先先看要比较的两个元素是否处于同一个层叠上下文中\\n\"),s(\"ul\",[s(\"li\",[t._v(\"在的话，则根据层叠顺序判断当前上下文中的层叠等级\")]),t._v(\" \"),s(\"li\",[t._v(\"否则则直接比较两个层叠上下文的层叠顺序\")])])]),t._v(\" \"),s(\"li\",[t._v(\"当两个元素层叠等级相同、层叠顺序相同时，在DOM结构中后面的元素层叠等级在前面元素之上。\")])])])}),[],!1,null,null,null);a.default=_.exports}}]);","extractedComments":[]}